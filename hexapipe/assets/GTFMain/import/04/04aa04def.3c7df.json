[1,["8edNkE3R9HV7DZRXQIBgNA","5d/HyPzNtGR6ehdx+HHwQw"],["texture","_effectAsset"],[["cc.Material",["_name","_techniqueData"],2,11],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2],[1,0,1,2,4]],[[[[0,"MovingBG",[{},"0",11,[{},"props",11,[{},"texture",6,0]]]]],0,0,[0,0],[0,1],[0,1]],[[[1,"MovingBG",[{"hash":4268122913,"record":null,"name":"MovingBG|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nin vec2 a_uv0;\nin vec2 a_uv1;\nin vec2 a_uv2;\nin vec2 a_uv3;\nout vec2 v_uv0;\nout vec2 v_uv1;\nout vec2 v_uv2;\nout vec2 v_uv3;\nout vec4 v_color;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_uv1 = a_uv1;\n  v_uv2 = a_uv2;\n  v_uv3 = a_uv3;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_uv0;\nin vec2 v_uv1;\nin vec2 v_uv2;\nin vec2 v_uv3;\nin vec4 v_color;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  float tx = cc_time.x * 0.0191;\n  float ty = -tx;\n  vec2 xpq = v_uv2.xy;\n  vec2 ypq = v_uv3.xy;\n  uv.x = uv.x * xpq.x + xpq.y;\n  uv.y = uv.y * ypq.x + ypq.y;\n  uv.x = fract(uv.x - tx);\n  uv.y = fract(uv.y - ty);\n  uv.x = (uv.x - xpq.y) / xpq.x;\n  uv.y = (uv.y - ypq.y) / ypq.x;\n  vec4 col = texture(texture, uv);\n  col.a = v_color.a;\n  gl_FragColor = col;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nattribute vec2 a_uv0;\nattribute vec2 a_uv1;\nattribute vec2 a_uv2;\nattribute vec2 a_uv3;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nvarying vec2 v_uv2;\nvarying vec2 v_uv3;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_uv1 = a_uv1;\n  v_uv2 = a_uv2;\n  v_uv3 = a_uv3;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform vec4 cc_time;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nvarying vec2 v_uv2;\nvarying vec2 v_uv3;\nvarying vec4 v_color;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  float tx = cc_time.x * 0.0191;\n  float ty = -tx;\n  vec2 xpq = v_uv2.xy;\n  vec2 ypq = v_uv3.xy;\n  uv.x = uv.x * xpq.x + xpq.y;\n  uv.y = uv.y * ypq.x + ypq.y;\n  uv.x = fract(uv.x - tx);\n  uv.y = fract(uv.y - ty);\n  uv.x = (uv.x - xpq.y) / xpq.x;\n  uv.y = (uv.y - ypq.y) / ypq.x;\n  vec4 col = texture2D(texture, uv);\n  col.a = v_color.a;\n  gl_FragColor = col;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[],"blocks":[],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"MovingBG|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29}}}]}]]],0,0,[],[],[]]]]