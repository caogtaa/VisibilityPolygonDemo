[1,["7asXtMaIBEQrrkB9Swi8kT"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[0,0,1,2,4],[1,0,1,3]],[[[[0,"NodeMask",[{"hash":3339728717,"record":null,"name":"NodeMask|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\n#if GT_USE_NODE_MASK\nout vec2 mask_uv0;\nuniform MASK{\n    mediump mat4 mat_mask;\n};\n#endif\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  vec4 pos = vec4(a_position, 1);\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  #if GT_USE_NODE_MASK\n    vec4 mask_pos;\n    #if CC_USE_MODEL\n      mask_pos = mat_mask * cc_matWorld * pos;\n    #else\n      mask_pos = mat_mask * pos;\n    #endif\n    mask_uv0 = vec2(mask_pos.x, 1.0 - mask_pos.y);\n  #endif\n  v_color = a_color;\n  gl_Position = mvp * pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\n#if GT_USE_NODE_MASK\nin vec2 mask_uv0;\n#endif\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture(texture, uv);\n  #if GT_USE_NODE_MASK\n    uv = step(vec2(0.0), mask_uv0) * step(mask_uv0, vec2(1.0));\n    col.a = uv.x * uv.y;\n  #endif\n  gl_FragColor = col;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\n#if GT_USE_NODE_MASK\nvarying vec2 mask_uv0;\nuniform mediump mat4 mat_mask;\n#endif\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  vec4 pos = vec4(a_position, 1);\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  #if GT_USE_NODE_MASK\n    vec4 mask_pos;\n    #if CC_USE_MODEL\n      mask_pos = mat_mask * cc_matWorld * pos;\n    #else\n      mask_pos = mat_mask * pos;\n    #endif\n    mask_uv0 = vec2(mask_pos.x, 1.0 - mask_pos.y);\n  #endif\n  v_color = a_color;\n  gl_Position = mvp * pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if GT_USE_NODE_MASK\nvarying vec2 mask_uv0;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture2D(texture, uv);\n  #if GT_USE_NODE_MASK\n    uv = step(vec2(0.0), mask_uv0) * step(mask_uv0, vec2(1.0));\n    col.a = uv.x * uv.y;\n  #endif\n  gl_FragColor = col;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"GT_USE_NODE_MASK","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"MASK","binding":0,"members":[{"name":"mat_mask","type":26,"count":1}],"defines":["GT_USE_NODE_MASK"]},{"name":"ALPHA_TEST","binding":1,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"NodeMask|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"mat_mask":{"type":26,"value":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}}]}]]],0,0,[],[],[]],[[[1,"NodeMask",{"0":{"props":{}}}]],0,0,[0],[0],[0]]]]