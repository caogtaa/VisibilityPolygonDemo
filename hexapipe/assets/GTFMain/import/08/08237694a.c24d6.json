[1,["8edNkE3R9HV7DZRXQIBgNA","05UWaCCVFA1LBu5Nt2ISrk"],["texture","_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],2,11]],[[0,0,1,2,4],[1,0,1,2]],[[[[0,"SDFBloom",[{"hash":3724318060,"record":null,"name":"SDFBloom|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nin vec2 v_uv1;\nuniform sampler2D texture;\nfloat Remap01(float a, float b, float t) {\n  return (t-a) / (b-a);\n}\nfloat Remap(float a, float b, float c, float d, float t) {\n  return Remap01(a, b, t) * (d-c) + c;\n}\nfloat Pulse(float x) {\n  return pow(4.0 * x * (1.0 - x), 16.0);\n}\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture(texture, uv) * v_color;\n  vec2 o = uv * 2.0 - 1.0;\n  float alpha = col.a;\n  float outlineWidth = 0.4;\n  float centerAlpha = 0.5;\n  float alphaDist = abs(alpha - centerAlpha);\n  float mask = smoothstep(outlineWidth, 0., alphaDist);\n  float ring = mask;\n  vec4 outlineColor = vec4(1., 0., 1., ring);\n  col = outlineColor;\n  float brightness = Remap(0., 1., 0.7, 1.0, abs(sin(cc_time.x * 2.0)));\n  col.rgb += Pulse((alphaDist + 0.5)) * brightness;\n  gl_FragColor = col;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nuniform vec4 cc_time;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nuniform sampler2D texture;\nfloat Remap01(float a, float b, float t) {\n  return (t-a) / (b-a);\n}\nfloat Remap(float a, float b, float c, float d, float t) {\n  return Remap01(a, b, t) * (d-c) + c;\n}\nfloat Pulse(float x) {\n  return pow(4.0 * x * (1.0 - x), 16.0);\n}\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture2D(texture, uv) * v_color;\n  vec2 o = uv * 2.0 - 1.0;\n  float alpha = col.a;\n  float outlineWidth = 0.4;\n  float centerAlpha = 0.5;\n  float alphaDist = abs(alpha - centerAlpha);\n  float mask = smoothstep(outlineWidth, 0., alphaDist);\n  float ring = mask;\n  vec4 outlineColor = vec4(1., 0., 1., ring);\n  col = outlineColor;\n  float brightness = Remap(0., 1., 0.7, 1.0, abs(sin(cc_time.x * 2.0)));\n  col.rgb += Pulse((alphaDist + 0.5)) * brightness;\n  gl_FragColor = col;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[],"blocks":[],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"SDFBloom|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29}}}]}]]],0,0,[],[],[]],[[[1,"SDFBloom",[{},"0",11,[{},"props",11,[{},"texture",6,0]]]]],0,0,[0,0],[0,1],[0,1]]]]